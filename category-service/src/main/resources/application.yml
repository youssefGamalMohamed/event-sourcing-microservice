# ----- Spring Config ------
spring:
  application:
    name: category-service

  # --- SQL Database (Postgres) ---
  datasource:
    url: jdbc:postgresql://localhost:5432/app-command-db
    username: appuser
    password: mypassword
    driver-class-name: org.postgresql.Driver

  # --- Jpa Config ---------
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          create_namespaces: true
        default_schema: category_schema   # ðŸ‘ˆ ensure schema isolation

  # --- Mongo DB Query DB --------
  data:
    mongodb:
      uri: mongodb://appuser:mypassword@localhost:27017/categoryQueryDB?authSource=admin
      host: localhost
      port: 27017
      database: categoryQueryDB
      username: appuser
      password: mypassword

    # --- Redis Caching  --------
    redis:
      host: localhost
      port: 6379

  cache:
    type: redis

  # --- Kafka Configuration (merged producer + consumer) ---
  kafka:
    bootstrap-servers: "localhost:9092"

    # Producer (from command service)
    producer:
      key-serializer: "org.apache.kafka.common.serialization.StringSerializer"
      value-serializer: "io.confluent.kafka.serializers.KafkaAvroSerializer"
      properties:
        schema:
          registry:
            url: "http://localhost:8081"

    # Consumer (from query service)
    consumer:
      group-id: "category-query-consumer-group"
      keyDeserializer: "org.apache.kafka.common.serialization.StringDeserializer"
      valueDeserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
      properties:
        schema:
          registry:
            url: "http://localhost:8081"
        specific:
          avro:
            reader: "true"

# --- Broker Topics ---
broker:
  topics:
    categories-topic: categories-topic


# ----- Server Configs -----
server:
  port: 7070
  servlet:
    context-path: /ecommerce/api/v1


# Swagger UI
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs


# ---- Zipkin and Tracing Configs ----
management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0 # 100% traces (adjust for production, e.g. 0.1)
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans # Zipkin server URL


# ----- Eureka Discovery Client -----
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/


# --- Logging ---
logging:
  level:
    org.springframework.kafka: DEBUG
    org.springframework.cache: TRACE
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG
    org.springframework.data.mongodb.repository.query: DEBUG
    org.mongodb.driver.protocol.command: DEBUG
    org.mongodb.driver.connection: DEBUG
